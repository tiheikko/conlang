server {
    listen 80;
    listen [::]:80;
    server_name example.com  www.example.com localhost;
    
    # Перенаправление на HTTPS (только для production)
    location / {
        if ($host != "localhost") {
            return 301 https://$host$request_uri;
        }
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Для Certbot (HTTP challenge)
    location /.well-known/acme-challenge/ {
        root /var/www/html/public;
    }
}

# SSL конфигурация (активируется только при наличии сертификатов)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name example.com www.example.com;

    # Если сертификаты не существуют, этот сервер не запустится
    ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    
    # Если сертификатов нет, закомментируйте или удалите вышеуказанные строки
    # и раскомментируйте следующую строку для локальной разработки:
    # return 444;  # Соединение закрывается без ответа

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";

    root /var/www/html/public;
    index index.php;

    charset utf-8;
    client_max_body_size 1024M;

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    error_page 404 /index.php;

    location ~ \.php$ {
        fastcgi_pass app:9000;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }
}
